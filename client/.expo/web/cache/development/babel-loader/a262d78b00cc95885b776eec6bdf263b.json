{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Input } from 'native-base';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoApp(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      task = _useState4[0],\n      setTask = _useState4[1];\n\n  var handleAddTask = function handleAddTask(value) {\n    props.addTask(value);\n    setTask(null);\n  };\n\n  var addTask = function addTask(task) {\n    if (task == null) return;\n    setTasks([].concat(_toConsumableArray(tasks), [task]));\n    Keyboard.dismiss();\n  };\n\n  var deleteTask = function deleteTask(deleteIndex) {\n    setTasks(tasks.filter(function (value, index) {\n      return index != deleteIndex;\n    }));\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.indexContainer,\n        children: _jsx(Text, {\n          style: styles.index,\n          children: props.index\n        })\n      }), _jsxs(View, {\n        style: styles.taskContainer,\n        children: [_jsx(Text, {\n          style: styles.task,\n          children: props.task\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.deleteTask();\n          },\n          children: _jsx(MaterialIcons, {\n            style: styles.delete,\n            name: \"delete\",\n            size: 18,\n            color: \"#fff\"\n          })\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.con,\n      children: [_jsx(Input, {\n        style: styles.inputField,\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask(task);\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"keyboard-arrow-up\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  containerMain: {\n    flex: 1,\n    backgroundColor: '#FF7878'\n  },\n  container: {\n    flexDirection: 'row',\n    marginHorizontal: 20,\n    marginTop: 20\n  },\n  indexContainer: {\n    backgroundColor: '#BFFFF0',\n    borderRadius: 12,\n    marginRight: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 50,\n    height: 50\n  },\n  index: {\n    color: '#fff',\n    fontSize: 20\n  },\n  taskContainer: {\n    backgroundColor: '#BFFFF0',\n    borderRadius: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    minHeight: 50\n  },\n  task: {\n    color: '#fff',\n    width: '90%',\n    fontSize: 16\n  },\n  delete: {\n    marginLeft: 10,\n    color: '#FF7878'\n  },\n  containerInput: {\n    borderColor: '#fff',\n    backgroundColor: '#3E3364',\n    borderWidth: 1,\n    marginHorizontal: 20,\n    borderRadius: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 10,\n    position: 'absolute',\n    bottom: 20\n  },\n  inputField: {\n    color: '#fff',\n    height: 50,\n    flex: 1\n  },\n  button: {\n    height: 30,\n    width: 30,\n    borderRadius: 5,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/STAGE 2 DUMBWAYS/TASK 3/TodoApp/src/TodoApp.js"],"names":["React","useState","Input","MaterialIcons","TodoApp","props","tasks","setTasks","task","setTask","handleAddTask","value","addTask","Keyboard","dismiss","deleteTask","deleteIndex","filter","index","styles","containerMain","container","indexContainer","taskContainer","delete","con","inputField","text","StyleSheet","create","flex","backgroundColor","flexDirection","marginHorizontal","marginTop","borderRadius","marginRight","alignItems","justifyContent","width","height","color","fontSize","paddingHorizontal","paddingVertical","minHeight","marginLeft","containerInput","borderColor","borderWidth","position","bottom","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { SafeAreaView, Text, TextInput, StyleSheet, View, TouchableOpacity, KeyboardAvoidingView } from 'react-native';\r\nimport { Input } from 'native-base'\r\nimport { MaterialIcons } from '@expo/vector-icons'; \r\n\r\n\r\nexport default function TodoApp(props) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState();\r\n\r\n  const handleAddTask = (value) => {\r\n    props.addTask(value);\r\n    setTask(null);\r\n  }\r\n\r\n  const addTask = (task) => {\r\n    if (task == null) return;\r\n    setTasks([...tasks, task]);\r\n    Keyboard.dismiss();\r\n  }\r\n\r\n  const deleteTask = (deleteIndex) => {\r\n    setTasks(tasks.filter((value, index) => index != deleteIndex));\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.containerMain}>\r\n        {/* {\r\n        tasks.map((task, index) => {\r\n          return ( */}\r\n            <View style={styles.container}>\r\n            <View style={styles.indexContainer}>\r\n                <Text style={styles.index}>{props.index}</Text>\r\n            </View>\r\n            <View style={styles.taskContainer}>\r\n                <Text style={styles.task}>{props.task}</Text>\r\n                <TouchableOpacity onPress={() => props.deleteTask()}>\r\n                    <MaterialIcons style={styles.delete} name=\"delete\" size={18} color='#fff' />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n          {/* );\r\n        })\r\n      } */}\r\n        <View style={styles.con}>\r\n        <Input style={styles.inputField} value={task} onChangeText={text => setTask(text)}/>\r\n        <TouchableOpacity onPress={() => handleAddTask(task)}>\r\n          <MaterialIcons name=\"keyboard-arrow-up\" size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  containerMain: {\r\n    flex: 1,\r\n    backgroundColor: '#FF7878',\r\n  },\r\n  container: {\r\n      flexDirection: 'row',\r\n      marginHorizontal: 20,\r\n      marginTop: 20\r\n  },\r\n  indexContainer: {\r\n      backgroundColor: '#BFFFF0',\r\n      borderRadius: 12,\r\n      marginRight: 10,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: 50,\r\n      height: 50,\r\n  },\r\n  index: {\r\n      color: '#fff',\r\n      fontSize: 20,\r\n  },\r\n  taskContainer: {\r\n      backgroundColor: '#BFFFF0',\r\n      borderRadius: 12,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      flex: 1,\r\n      paddingHorizontal: 10,\r\n      paddingVertical: 5,\r\n      minHeight: 50,\r\n  },\r\n  task: {\r\n      color: '#fff',\r\n      width: '90%',\r\n      fontSize: 16,\r\n  },\r\n  delete: {\r\n      marginLeft: 10,\r\n      color: '#FF7878'\r\n  },\r\n  containerInput: {\r\n    borderColor: '#fff',\r\n    backgroundColor: '#3E3364',\r\n    borderWidth: 1,\r\n    marginHorizontal: 20,\r\n    borderRadius: 12,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 10,\r\n    position: 'absolute',\r\n    bottom: 20,\r\n},\r\ninputField: {\r\n    color: '#fff',\r\n    height: 50,\r\n    flex: 1,\r\n},\r\nbutton: {\r\n    height: 30,\r\n    width: 30,\r\n    borderRadius: 5,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}