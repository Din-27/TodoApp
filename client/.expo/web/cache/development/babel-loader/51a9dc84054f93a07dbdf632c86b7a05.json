{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TaskItem from \"./components/TaskItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoApp() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var addTask = function addTask(task) {\n    if (task == null) return;\n    setTasks([].concat(_toConsumableArray(tasks), [task]));\n    Keyboard.dismiss();\n  };\n\n  var deleteTask = function deleteTask(deleteIndex) {\n    setTasks(tasks.filter(function (value, index) {\n      return index != deleteIndex;\n    }));\n  };\n\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Text, {\n      children: \"Today\"\n    }), tasks.map(function (task, index) {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.indexContainer,\n          children: _jsx(Text, {\n            style: styles.index,\n            children: props.index\n          })\n        }), _jsxs(View, {\n          style: styles.taskContainer,\n          children: [_jsx(Text, {\n            style: styles.task,\n            children: props.task\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return props.deleteTask();\n            },\n            children: _jsx(MaterialIcons, {\n              style: styles.delete,\n              name: \"delete\",\n              size: 18,\n              color: \"#fff\"\n            })\n          })]\n        })]\n      });\n    })]\n  });\n}","map":{"version":3,"sources":["D:/STAGE 2 DUMBWAYS/TASK 3/TodoApp/src/TodoApp.js"],"names":["React","TaskItem","TodoApp","useState","tasks","setTasks","addTask","task","Keyboard","dismiss","deleteTask","deleteIndex","filter","value","index","map","styles","container","indexContainer","props","taskContainer","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,kBAA0BC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxB,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAClBF,IAAAA,QAAQ,8BAAKD,KAAL,IAAYG,IAAZ,GAAR;AACAC,IAAAA,QAAQ,CAACC,OAAT;AACD,GAJD;;AAMA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAiB;AAClCN,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAa,UAACC,KAAD,EAAQC,KAAR;AAAA,aAAkBA,KAAK,IAAIH,WAA3B;AAAA,KAAb,CAAD,CAAR;AACD,GAFD;;AAIA,SACE,MAAC,YAAD;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAGIP,KAAK,CAACW,GAAN,CAAU,UAACR,IAAD,EAAOO,KAAP,EAAiB;AACzB,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,mBACA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEF,MAAM,CAACF,KAApB;AAAA,sBAA4BK,KAAK,CAACL;AAAlC;AADJ,UADA,EAIA,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACI,aAApB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACT,IAApB;AAAA,sBAA2BY,KAAK,CAACZ;AAAjC,YADJ,EAEI,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE;AAAA,qBAAMY,KAAK,CAACT,UAAN,EAAN;AAAA,aAA3B;AAAA,sBACI,KAAC,aAAD;AAAe,cAAA,KAAK,EAAEM,MAAM,CAACK,MAA7B;AAAqC,cAAA,IAAI,EAAC,QAA1C;AAAmD,cAAA,IAAI,EAAE,EAAzD;AAA6D,cAAA,KAAK,EAAC;AAAnE;AADJ,YAFJ;AAAA,UAJA;AAAA,QADF;AAaD,KAdD,CAHJ;AAAA,IADF;AAsBD","sourcesContent":["import React from 'react'\r\nimport { SafeAreaView, Text } from 'react-native';\r\nimport TaskItem from './components/TaskItem';\r\n\r\nexport default function TodoApp() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (task) => {\r\n    if (task == null) return;\r\n    setTasks([...tasks, task]);\r\n    Keyboard.dismiss();\r\n  }\r\n\r\n  const deleteTask = (deleteIndex) => {\r\n    setTasks(tasks.filter((value, index) => index != deleteIndex));\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView>\r\n        <Text>Today</Text>\r\n        {\r\n        tasks.map((task, index) => {\r\n          return (\r\n            <View style={styles.container}>\r\n            <View style={styles.indexContainer}>\r\n                <Text style={styles.index}>{props.index}</Text>\r\n            </View>\r\n            <View style={styles.taskContainer}>\r\n                <Text style={styles.task}>{props.task}</Text>\r\n                <TouchableOpacity onPress={() => props.deleteTask()}>\r\n                    <MaterialIcons style={styles.delete} name=\"delete\" size={18} color='#fff' />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n          );\r\n        })\r\n      }\r\n    </SafeAreaView>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}